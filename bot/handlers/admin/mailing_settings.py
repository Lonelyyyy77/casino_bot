import math
import sqlite3

from aiogram import Router, types
from aiogram.utils.keyboard import InlineKeyboardBuilder

from bot.database import DB_NAME
from bot.database.admin.admin import get_mailings_page

router = Router()
PAGE_SIZE = 3


def get_mailings_page(page: int):
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ—Ä—Ç–µ–∂:
      (—Å–ø–∏—Å–æ–∫ —Ä–∞—Å—Å—ã–ª–æ–∫ –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã, –æ–±—â–µ–µ —á–∏—Å–ª–æ —Å—Ç—Ä–∞–Ω–∏—Ü, –æ–±—â–µ–µ —á–∏—Å–ª–æ —Ä–∞—Å—Å—ã–ª–æ–∫)
    –ü—Ä–∏ —ç—Ç–æ–º –¥–ª—è —Ä–∞—Å—Å—ã–ª–æ–∫ —Å –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ–º –±–µ—Ä—ë—Ç—Å—è –∞–∫—Ç—É–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –∞–∫—Ç–∏–≤–∞—Ü–∏–π
    –∏–∑ —Ç–∞–±–ª–∏—Ü—ã reward_buttons (—Å—Ç–æ–ª–±–µ—Ü remaining_uses).
    """
    conn = sqlite3.connect(DB_NAME)
    cursor = conn.cursor()

    cursor.execute("SELECT COUNT(*) FROM mailings")
    total_count = cursor.fetchone()[0]
    total_pages = math.ceil(total_count / PAGE_SIZE) if total_count > 0 else 1

    offset = page * PAGE_SIZE

    cursor.execute("""
        SELECT 
            m.id, 
            m.text, 
            m.media_type, 
            m.reward_amount, 
            COALESCE(rb.remaining_uses, m.reward_uses) AS remaining_uses,
            m.timestamp 
        FROM mailings m
        LEFT JOIN reward_buttons rb ON m.reward_button_id = rb.id
        ORDER BY m.timestamp DESC 
        LIMIT ? OFFSET ?
    """, (PAGE_SIZE, offset))
    mailings = cursor.fetchall()
    conn.close()
    return mailings, total_pages, total_count


def build_mailings_text(mailings, current_page: int, total_pages: int, total_count: int) -> str:
    """
    –§–æ—Ä–º–∏—Ä—É–µ—Ç –∫—Ä–∞—Å–∏–≤–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω—ã–π HTML‚Äë—Ç–µ–∫—Å—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ä–∞—Å—Å—ã–ª–æ–∫.
    –í —à–∞–ø–∫–µ –≤—ã–≤–æ–¥–∏—Ç—Å—è –Ω–æ–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã, –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–∞–Ω–∏—Ü –∏ –æ–±—â–µ–µ —á–∏—Å–ª–æ —Ä–∞—Å—Å—ã–ª–æ–∫.
    –î–ª—è –∫–∞–∂–¥–æ–π —Ä–∞—Å—Å—ã–ª–∫–∏ –≤—ã–≤–æ–¥–∏—Ç—Å—è:
      ‚Ä¢ ID,
      ‚Ä¢ –¥–∞—Ç–∞,
      ‚Ä¢ —Ç–∏–ø –º–µ–¥–∏–∞,
      ‚Ä¢ –∫—Ä–∞—Ç–∫–∏–π —Ç–µ–∫—Å—Ç (–ø–µ—Ä–≤—ã–µ 50 —Å–∏–º–≤–æ–ª–æ–≤),
      ‚Ä¢ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–∏ (–µ—Å–ª–∏ –∑–∞–¥–∞–Ω–æ), –≥–¥–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è —Å—É–º–º–∞ –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏—è –∏ –æ—Å—Ç–∞–≤—à–∏–µ—Å—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏.
    """
    if not mailings:
        return "–ù–µ—Ç —Ä–∞—Å—Å—ã–ª–æ–∫ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è."

    text = "üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–∞—Å—Å—ã–ª–æ–∫</b>\n"
    text += f"–°—Ç—Ä–∞–Ω–∏—Ü–∞: {current_page + 1} –∏–∑ {total_pages}\n"
    text += f"–í—Å–µ–≥–æ —Ä–∞—Å—Å—ã–ª–æ–∫: {total_count}\n\n"

    for mailing in mailings:
        mailing_id, mailing_text, media_type, reward_amount, remaining_uses, timestamp = mailing
        text_preview = mailing_text if len(mailing_text) < 50 else mailing_text[:50] + "..."
        text += f"üÜî <b>ID:</b> {mailing_id}\n"
        text += f"üïí <b>–î–∞—Ç–∞:</b> {timestamp}\n"
        text += f"üì∑ <b>–¢–∏–ø –º–µ–¥–∏–∞:</b> {media_type or '–ù–µ—Ç'}\n"
        text += f"‚úâÔ∏è <b>–¢–µ–∫—Å—Ç:</b> {text_preview}\n"
        if reward_amount and remaining_uses is not None:
            text += f"üí∞ <b>–í–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ:</b> {reward_amount} JPC, <b>–û—Å—Ç–∞–ª–æ—Å—å –∞–∫—Ç–∏–≤–∞—Ü–∏–π:</b> {remaining_uses}\n"
        text += "\n"
    return text


def build_pagination_kb(current_page: int, total_pages: int) -> InlineKeyboardBuilder:
    """
    –§–æ—Ä–º–∏—Ä—É–µ—Ç inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –ø–µ—Ä–µ–ª–∏—Å—Ç—ã–≤–∞–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ä–∞—Å—Å—ã–ª–æ–∫.
    –ï—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω—ã –∏ –ø—Ä–µ–¥—ã–¥—É—â–∞—è, –∏ —Å–ª–µ–¥—É—é—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã, –≤—ã–≤–æ–¥—è—Ç—Å—è –¥–≤–µ –∫–Ω–æ–ø–∫–∏ –≤ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–µ.
    """
    kb = InlineKeyboardBuilder()
    if current_page > 0 and current_page < total_pages - 1:
        kb.row(
            types.InlineKeyboardButton(
                text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data=f"mailing_settings:{current_page - 1}"
            ),
            types.InlineKeyboardButton(
                text="–í–ø–µ—Ä–µ–¥ ‚û°Ô∏è", callback_data=f"mailing_settings:{current_page + 1}"
            )
        )
    elif current_page > 0:
        kb.add(
            types.InlineKeyboardButton(
                text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data=f"mailing_settings:{current_page - 1}"
            )
        )
    elif current_page < total_pages - 1:
        kb.add(
            types.InlineKeyboardButton(
                text="–í–ø–µ—Ä–µ–¥ ‚û°Ô∏è", callback_data=f"mailing_settings:{current_page + 1}"
            )
        )
    return kb


@router.callback_query(lambda c: c.data.startswith("mailing_settings"))
async def mailing_settings_handler(callback: types.CallbackQuery):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ä–∞—Å—Å—ã–ª–æ–∫.
    –ü—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É ¬´‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–∞—Å—Å—ã–ª–∫–∏¬ª –∏–ª–∏ –∫–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏,
    —Å–æ–æ–±—â–µ–Ω–∏–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ—Ç—Å—è —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ —Ä–∞—Å—Å—ã–ª–æ–∫.
    """
    data = callback.data
    try:
        if data == "mailing_settings":
            current_page = 0
        else:
            current_page = int(data.split(":")[1])
    except Exception:
        current_page = 0

    mailings, total_pages, total_count = get_mailings_page(current_page)
    text = build_mailings_text(mailings, current_page, total_pages, total_count)
    kb = build_pagination_kb(current_page, total_pages)

    await callback.message.edit_text(
        text=text, reply_markup=kb.as_markup(), parse_mode="HTML"
    )
    await callback.answer()
