import asyncio
import sqlite3

from aiogram import Router
from aiogram.types import CallbackQuery, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder
from pyexpat.errors import messages

from bot.database import DB_NAME

router = Router()

conn = sqlite3.connect(DB_NAME)
cursor = conn.cursor()


@router.callback_query(lambda c: c.data == 'games')
async def games(callback: CallbackQuery):
    telegram_id = callback.from_user.id
    cursor.execute("SELECT balance, current_bet, total_bets FROM user WHERE telegram_id = ?", (telegram_id,))
    user_data_bet = cursor.fetchone()
    await callback.message.edit_text('–í—ã–±–µ—Ä–µ—Ç–µ –∏–≥—Ä—É:', reply_markup=get_game_keyboard(current_bet=user_data_bet[1]))


@router.callback_query(lambda c: c.data in ['bones_game', 'basketball_game', 'bowling_game'])
async def game_selected(callback: CallbackQuery):
    telegram_id = callback.from_user.id

    cursor.execute("SELECT balance, current_bet, total_bets FROM user WHERE telegram_id = ?", (telegram_id,))
    user_data = cursor.fetchone()

    if not user_data:
        await callback.message.answer("–í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!")
        return

    balance, current_bet, total_bets = user_data

    if balance < current_bet:
        await callback.answer("–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è —Å—Ç–∞–≤–∫–∏!", show_alert=False)
        return

    cursor.execute("UPDATE user SET balance = balance - ?, total_bets = total_bets + ? WHERE telegram_id = ?",
                   (current_bet, current_bet, telegram_id))
    conn.commit()

    text = (f"–í—ã –≤—ã–±—Ä–∞–ª–∏ –∏–≥—Ä—É: {callback.data.replace('_', ' ').title()}\n"
            f"–¢–µ–∫—É—â–∞—è —Å—Ç–∞–≤–∫–∞: {current_bet} USDT\n–í–∞—à –±–∞–ª–∞–Ω—Å: {balance - current_bet:.2f} USDT")

    if callback.data in ['bones_game', 'bowling_game']:
        kb = InlineKeyboardBuilder()
        kb.add(
            InlineKeyboardButton(text='–ë–æ–ª—å—à–µ 3', callback_data=f"{callback.data}_over"),
            InlineKeyboardButton(text='–ú–µ–Ω—å—à–µ –∏–ª–∏ —Ä–∞–≤–Ω–æ 3', callback_data=f"{callback.data}_under")
        )
        await callback.message.edit_text(f"{text}\n–ù–∞ —á—Ç–æ —Å—Ç–∞–≤–∏—Ç–µ?", reply_markup=kb.as_markup())
        return

    elif callback.data == 'basketball_game':
        dice_message = await callback.message.answer_dice(emoji="üèÄ")
        await asyncio.sleep(4)
        result = dice_message.dice.value

        if result > 3:  # –ü–æ–±–µ–¥–∞
            winnings = calculate_winnings(current_bet)
            cursor.execute("""
                UPDATE user 
                SET balance = balance + ? 
                WHERE telegram_id = ?
            """, (winnings, telegram_id))
            conn.commit()
            await callback.answer(
                f"üèÄ –û—Ç–ª–∏—á–Ω—ã–π –±—Ä–æ—Å–æ–∫! –í—ã –Ω–∞–±—Ä–∞–ª–∏ {result} –æ—á–∫–æ–≤! –ü–æ–±–µ–¥–∞!\n"
                f"–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏: {winnings:.2f} USDT\n–í–∞—à –±–∞–ª–∞–Ω—Å: {balance - current_bet + winnings:.2f} USDT",
                show_alert=True
            )
        else:
            await callback.answer(
                f"üèÄ –ù–µ –ø–æ–≤–µ–∑–ª–æ, –≤—Å–µ–≥–æ {result} –æ—á–∫–∞. –ü—Ä–æ–∏–≥—Ä—ã—à!\n–í–∞—à –±–∞–ª–∞–Ω—Å: {balance - current_bet:.2f} USDT",
                show_alert=True
            )


@router.callback_query(lambda c: c.data.endswith('_over') or c.data.endswith('_under'))
async def process_bet_choice(callback: CallbackQuery):
    await callback.message.delete()

    telegram_id = callback.from_user.id

    # –†–∞–∑–¥–µ–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ callback –Ω–∞ —á–∞—Å—Ç–∏
    data_parts = callback.data.rsplit('_', maxsplit=1)  # –†–∞–∑–¥–µ–ª—è–µ–º —Ç–æ–ª—å–∫–æ –Ω–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ –¥–≤–∞ —ç–ª–µ–º–µ–Ω—Ç–∞
    if len(data_parts) != 2:
        await callback.message.answer("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤—ã–±–æ—Ä–∞ —Å—Ç–∞–≤–∫–∏.")
        return

    game_choice, bet_type = data_parts  # –†–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –¥–≤–µ —á–∞—Å—Ç–∏

    cursor.execute("SELECT balance, current_bet FROM user WHERE telegram_id = ?", (telegram_id,))
    user_data = cursor.fetchone()

    if not user_data:
        await callback.message.answer("–í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!")
        return

    balance, current_bet = user_data

    if game_choice == "bones_game":
        dice_emoji = "üé≤"
    elif game_choice == "bowling_game":
        dice_emoji = "üé≥"
    else:
        await callback.message.answer("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –∏–≥—Ä–∞.")
        return

    dice_message = await callback.message.answer_dice(emoji=dice_emoji)
    await asyncio.sleep(5)
    result = dice_message.dice.value

    win_condition = (result > 3 and bet_type == "over") or (result <= 3 and bet_type == "under")

    if win_condition:  # –ü–æ–±–µ–¥–∞
        winnings = calculate_winnings(current_bet)
        cursor.execute("""
            UPDATE user 
            SET balance = balance + ? 
            WHERE telegram_id = ?
        """, (winnings, telegram_id))
        conn.commit()
        await callback.message.answer(
            f"{dice_emoji} –í—ã –≤—ã–±—Ä–æ—Å–∏–ª–∏: {result}. –ü–æ–±–µ–¥–∞!\n"
            f"–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏: {winnings:.2f} USDT\n–í–∞—à –±–∞–ª–∞–Ω—Å: {balance + winnings:.2f} USDT",
            reply_markup=get_game_keyboard(current_bet)
        )
    else:  # –ü—Ä–æ–∏–≥—Ä—ã—à
        await callback.message.answer(
            f"{dice_emoji} –í—ã –≤—ã–±—Ä–æ—Å–∏–ª–∏: {result}. –ü—Ä–æ–∏–≥—Ä—ã—à!\n–í–∞—à –±–∞–ª–∞–Ω—Å: {balance:.2f} USDT",
            reply_markup=get_game_keyboard(current_bet)
        )



def calculate_winnings(bet):
    cursor.execute("SELECT percentage FROM game_settings WHERE id = 1")
    settings = cursor.fetchone()
    percentage = settings[0] / 100 if settings else 0.1
    return bet + (bet * percentage)


@router.callback_query(lambda c: c.data in ['increase_bet', 'decrease_bet'])
async def change_bet(callback: CallbackQuery):
    telegram_id = callback.from_user.id

    cursor.execute("SELECT current_bet FROM user WHERE telegram_id = ?", (telegram_id,))
    user_data = cursor.fetchone()

    if not user_data:
        await callback.answer("–í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!", show_alert=True)
        return

    current_bet = user_data[0]
    previous_bet = current_bet

    if callback.data == 'increase_bet':
        current_bet = min(current_bet * 2, 100)
    elif callback.data == 'decrease_bet':
        current_bet = max(current_bet / 2, 0.1)

    if previous_bet == current_bet:
        await callback.answer("–°—Ç–∞–≤–∫–∞ —É–∂–µ –º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è/–º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è!", show_alert=False)
        return

    cursor.execute("UPDATE user SET current_bet = ? WHERE telegram_id = ?", (current_bet, telegram_id))
    conn.commit()

    kb = get_game_keyboard(current_bet)

    new_message = f"–í—ã–±–µ—Ä–∏—Ç–µ –∏–≥—Ä—É –∏–ª–∏ –∏–∑–º–µ–Ω–∏—Ç–µ —Å—Ç–∞–≤–∫—É:\n–¢–µ–∫—É—â–∞—è —Å—Ç–∞–≤–∫–∞: {current_bet:.1f} USDT"
    await callback.message.edit_text(new_message, reply_markup=kb)


def get_game_keyboard(current_bet):
    kb = InlineKeyboardBuilder()
    kb.row(InlineKeyboardButton(text='üé≤ –ö–æ—Å—Ç–∏', callback_data='bones_game'))
    kb.row(InlineKeyboardButton(text='üèÄ –ë–∞—Å–∫–µ—Ç–±–æ–ª', callback_data='basketball_game'))
    kb.row(InlineKeyboardButton(text='üé≥ –ë–æ—É–ª–∏–Ω–≥', callback_data='bowling_game'))
    kb.row(InlineKeyboardButton(text='‚¨ÜÔ∏è', callback_data='increase_bet'))
    kb.add(
        InlineKeyboardButton(text=f'{current_bet:.1f} USDT', callback_data='current_bet'),
        InlineKeyboardButton(text='‚¨áÔ∏è', callback_data='decrease_bet'),
    )
    kb.row(InlineKeyboardButton(text='üîô –ù–∞–∑–∞–¥', callback_data='home'))
    return kb.as_markup()
